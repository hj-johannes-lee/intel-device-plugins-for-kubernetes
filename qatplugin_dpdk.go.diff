diff --git a/test/e2e/qat/qatplugin_dpdk.go b/test/e2e/qat/qatplugin_dpdk.go
index 0852dc1e..d77831de 100644
--- a/test/e2e/qat/qatplugin_dpdk.go
+++ b/test/e2e/qat/qatplugin_dpdk.go
@@ -26,9 +26,7 @@ import (
 	v1 "k8s.io/api/core/v1"
 	"k8s.io/apimachinery/pkg/api/resource"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
-	"k8s.io/apimachinery/pkg/labels"
 	"k8s.io/kubernetes/test/e2e/framework"
-	e2edebug "k8s.io/kubernetes/test/e2e/framework/debug"
 	e2ekubectl "k8s.io/kubernetes/test/e2e/framework/kubectl"
 	e2epod "k8s.io/kubernetes/test/e2e/framework/pod"
 	admissionapi "k8s.io/pod-security-admission/api"
@@ -74,41 +72,19 @@ func describeQatDpdkPlugin() {
 		framework.Failf("unable to locate %q: %v", compressTestYaml, errFailedToLocateRepoFile)
 	}
 
-	var dpPodName string
-
 	var resourceName v1.ResourceName
 
 	ginkgo.JustBeforeEach(func(ctx context.Context) {
 		ginkgo.By("deploying QAT plugin in DPDK mode")
 		e2ekubectl.RunKubectlOrDie(f.Namespace.Name, "apply", "-k", filepath.Dir(kustomizationPath))
 
-		ginkgo.By("waiting for QAT plugin's availability")
-		podList, err := e2epod.WaitForPodsWithLabelRunningReady(ctx, f.ClientSet, f.Namespace.Name,
-			labels.Set{"app": "intel-qat-plugin"}.AsSelector(), 1 /* one replica */, 100*time.Second)
-		if err != nil {
-			e2edebug.DumpAllNamespaceInfo(ctx, f.ClientSet, f.Namespace.Name)
-			e2ekubectl.LogFailedContainers(ctx, f.ClientSet, f.Namespace.Name, framework.Logf)
-			framework.Failf("unable to wait for all pods to be running and ready: %v", err)
-		}
-		dpPodName = podList.Items[0].Name
-
-		ginkgo.By("checking QAT plugin's securityContext")
-		if err := utils.TestPodsFileSystemInfo(podList.Items); err != nil {
-			framework.Failf("container filesystem info checks failed: %v", err)
-		}
-
 		ginkgo.By("checking if the resource is allocatable")
 		if err := utils.WaitForNodesWithResource(ctx, f.ClientSet, resourceName, 30*time.Second); err != nil {
 			framework.Failf("unable to wait for nodes to have positive allocatable resource: %v", err)
 		}
-	})
 
-	ginkgo.AfterEach(func(ctx context.Context) {
 		ginkgo.By("undeploying QAT plugin")
 		e2ekubectl.RunKubectlOrDie(f.Namespace.Name, "delete", "-k", filepath.Dir(kustomizationPath))
-		if err := e2epod.WaitForPodNotFoundInNamespace(ctx, f.ClientSet, dpPodName, f.Namespace.Name, 30*time.Second); err != nil {
-			framework.Failf("failed to terminate pod: %v", err)
-		}
 	})
 
 	ginkgo.Context("When QAT resources are available with crypto (cy) services enabled [Resource:cy]", func() {
